library(maps)
library(ade4)
trajm.dat <- read.csv("AveragedHumanTrajectories(VegLow)_stats.csv",sep=",",dec=".",header=T)
norme.fct <- function(trajm.dat,v0)
## je rajoute trajm.dat dans les arguments
{
v <- NULL
for(i in unique(trajm.dat[,2]))
{
sel<- trajm.dat[,2]==i
v1 <- v0[sel]
####     v <- norme.fct(trajm.dat[,15]*trajm.dat[,4]) rien ? foutre l? : ttention aux coupes colles
v1<- (v1-mean(v1))/sd(v1)
v <- c(v,v1)
}
return(v)
}
test.fct <- function(v1,v2)
{
stat.fct <-function(v1,v2)
{ return(mean(v1)-mean(v2))}
obs <- stat.fct(v1,v2)
sim <- NULL
for(i in 1:10000)
{
w <- sample(c(v1,v2))
sim <- c(sim,stat.fct(w[1:length(v1)],w[(length(v1)+1):length(w)]))
}
return(sum(sim>obs)/length(sim))
}
for(i in 6:11)
{
v <- norme.fct(trajm.dat,trajm.dat[,i]*trajm.dat[,4])
res <- test.fct(v[trajm.dat[,1]!="Y"],v[trajm.dat[,1]=="Y"])
print(c(names(trajm.dat)[i],"p-valeur de la diff de moyenne",res))
}
View(trajm.dat)
View(trajm.dat)
for(i in 7:12)
{
v <- norme.fct(trajm.dat,trajm.dat[,i]*trajm.dat[,4])
res <- test.fct(v[trajm.dat[,1]!="Y"],v[trajm.dat[,1]=="Y"])
print(c(names(trajm.dat)[i],"p-valeur de la diff de moyenne",res))
}
library(maps)
library(ade4)
trajm.dat <- read.csv("(old)AverHumanTrajEnv_v2.csv",sep=",",dec=".",header=T)
### on fait une acp sur les carateristiques (temperature; distance ? la cote...)
### faire "names(trajm.dat[,-c(1,2,3,4,5,6,8)])" pour voir qui entre dedans
#jj <- dudi.pca(trajm.dat[,-c(1,2,3,4,5,6,8)],nf=2,scannf=F)
View(trajm.dat)
trajm.dat <- read.csv("AveragedHumanTrajectories(VegLow)_stats.csv",sep=",",dec=".",header=T)
View(trajm.dat)
for(i in 8:13)
{
v <- norme.fct(trajm.dat,trajm.dat[,i]*trajm.dat[,4])
res <- test.fct(v[trajm.dat[,1]!="Y"],v[trajm.dat[,1]=="Y"])
print(c(names(trajm.dat)[i],"p-valeur de la diff de moyenne",res))
}
trajm.dat <- read.csv("AveragedHumanTrajectories(VegHigh)_stats.csv",sep=",",dec=".",header=T)
### on fait une acp sur les carateristiques (temperature; distance ? la cote...)
for(i in 8:13)
{
v <- norme.fct(trajm.dat,trajm.dat[,i]*trajm.dat[,4])
res <- test.fct(v[trajm.dat[,1]!="Y"],v[trajm.dat[,1]=="Y"])
print(c(names(trajm.dat)[i],"p-valeur de la diff de moyenne",res))
}
library(maps)
library(ade4)
trajm.dat <- read.csv("(old)AverHumanTrajEnv_v2.csv",sep=",",dec=".",header=T)
norme.fct <- function(trajm.dat,v0)
## je rajoute trajm.dat dans les arguments
{
v <- NULL
for(i in unique(trajm.dat[,2]))
{
sel<- trajm.dat[,2]==i
v1 <- v0[sel]
####     v <- norme.fct(trajm.dat[,15]*trajm.dat[,4]) rien ? foutre l? : ttention aux coupes colles
v1<- (v1-mean(v1))/sd(v1)
v <- c(v,v1)
}
return(v)
}
test.fct <- function(v1,v2)
{
stat.fct <-function(v1,v2)
{ return(mean(v1)-mean(v2))}
obs <- stat.fct(v1,v2)
sim <- NULL
for(i in 1:10000)
{
w <- sample(c(v1,v2))
sim <- c(sim,stat.fct(w[1:length(v1)],w[(length(v1)+1):length(w)]))
}
return(sum(sim>obs)/length(sim))
}
View(trajm.dat)
View(trajm.dat)
for(i in 7:15)
{
v <- norme.fct(trajm.dat,trajm.dat[,i]*trajm.dat[,4])
res <- test.fct(v[trajm.dat[,1]!="Y"],v[trajm.dat[,1]=="Y"])
print(c(names(trajm.dat)[i],"p-valeur de la diff de moyenne",res))
}
library(maps)
library(ade4)
trajm.dat <- read.csv("(old)AverHumanTrajEnv_v2.csv",sep=",",dec=".",header=T)
### on fait une acp sur les carateristiques (temperature; distance ? la cote...)
### faire "names(trajm.dat[,-c(1,2,3,4,5,6,8)])" pour voir qui entre dedans
#jj <- dudi.pca(trajm.dat[,-c(1,2,3,4,5,6,8)],nf=2,scannf=F)
#plot(jj$li[,1],jj$li[,2],pch=19,col=match(trajm.dat[,2],unique(trajm.dat[,2])),
# xlab="premier axe",ylab="deuxieme axe",main="acp de variables environnementales")
#on fait des gros cercles quand la variable state est "Y" (sais pas ce que c'est !!)
#sel <- (trajm.dat[,1]=="Y")
#points(jj$li[sel,1],jj$li[sel,2],pch=19,col=match(trajm.dat[sel,2],unique(trajm.dat[,2])),cex=2)
#plot(trajm.dat[,12+3],trajm.dat[,4],col=match(trajm.dat[,2],unique(trajm.dat[,2])),pch=19,ylab="taille",xlab="rugosit?")
#points(trajm.dat[sel,12+3],trajm.dat[sel,4],col=match(trajm.dat[sel,2],unique(trajm.dat[,2])),pch=19,cex=2)
#legend(2500,600,unique(trajm.dat[,2]),pch=19,col=1:7)
#plot(trajm.dat[,12+3]*trajm.dat[,4],trajm.dat[,1],col=match(trajm.dat[,2],unique(trajm.dat[,2])),pch=19,
#xlab="size*rugosite",ylab="State")
#legend(600000,2,unique(trajm.dat[,2]),pch=19,col=1:7)
###########################
##############
###########################
#tester les variables
###########################
##################
###########################
### fonction qui retourne pour chaque trajectoire sa residuelle normalisee
### par la moyenne et l'ecart-type des trajectoires de meme debut-fin (donne par unique(trajm.dat[,2]))
norme.fct <- function(trajm.dat,v0)
## je rajoute trajm.dat dans les arguments
{
v <- NULL
for(i in unique(trajm.dat[,2]))
{
sel<- trajm.dat[,2]==i
v1 <- v0[sel]
####     v <- norme.fct(trajm.dat[,15]*trajm.dat[,4]) rien ? foutre l? : ttention aux coupes colles
v1<- (v1-mean(v1))/sd(v1)
v <- c(v,v1)
}
return(v)
}
## test par permutation de l'egalite des moyennes des variables v1 et v2
##
test.fct <- function(v1,v2)
{
stat.fct <-function(v1,v2)
{ return(mean(v1)-mean(v2))}
obs <- stat.fct(v1,v2)
sim <- NULL
for(i in 1:10000)
{
w <- sample(c(v1,v2))
sim <- c(sim,stat.fct(w[1:length(v1)],w[(length(v1)+1):length(w)]))
}
return(sum(sim>obs)/length(sim))
}
### inutile... (normalisation de la projection sur laxe 2 de l'acp de la variable Taille
#v <- norme.fct(trajm.dat,jj$li[,2]*trajm.dat[,4])
### normalisation de la variable Temp(erature) par groupe de trajectoire
#v <- norme.fct(trajm.dat,trajm.dat[,7])
#plot(v,trajm.dat[,1],col=match(trajm.dat[,2],unique(trajm.dat[,2])),pch=19,xlab="Temp normee par groupe",ylab="State")
## est-ce que la valeur de la variable Temp(erature) normalisee par groupe de trajectoire
## varie selon que State vaut Y ou non ?
#test.res <- test.fct(v[trajm.dat[,1]!="Y"],v[trajm.dat[,1]=="Y"])
### les variables en boucle
## et on refait pour toutes les variables d'environnement
for(i in 7:15)
{
v <- norme.fct(trajm.dat,trajm.dat[,i]*trajm.dat[,4])
res <- test.fct(v[trajm.dat[,1]!="Y"],v[trajm.dat[,1]=="Y"])
print(c(names(trajm.dat)[i],"p-valeur de la diff de moyenne",res))
}
View(trajm.dat)
trajm.dat <- read.csv("AveragedHumanTrajectories(VegLow)_stats.csv",sep=",",dec=".",header=T)
norme.fct <- function(trajm.dat,v0)
## je rajoute trajm.dat dans les arguments
{
v <- NULL
for(i in unique(trajm.dat[,2]))
{
sel<- trajm.dat[,2]==i
v1 <- v0[sel]
####     v <- norme.fct(trajm.dat[,15]*trajm.dat[,4]) rien ? foutre l? : ttention aux coupes colles
v1<- (v1-mean(v1))/sd(v1)
v <- c(v,v1)
}
return(v)
}
## test par permutation de l'egalite des moyennes des variables v1 et v2
##
test.fct <- function(v1,v2)
{
stat.fct <-function(v1,v2)
{ return(mean(v1)-mean(v2))}
obs <- stat.fct(v1,v2)
sim <- NULL
for(i in 1:10000)
{
w <- sample(c(v1,v2))
sim <- c(sim,stat.fct(w[1:length(v1)],w[(length(v1)+1):length(w)]))
}
return(sum(sim>obs)/length(sim))
}
for(i in 7:15)
{
v <- norme.fct(trajm.dat,trajm.dat[,i]*trajm.dat[,4])
res <- test.fct(v[trajm.dat[,1]!="Y"],v[trajm.dat[,1]=="Y"])
print(c(names(trajm.dat)[i],"p-valeur de la diff de moyenne",res))
}
View(trajm.dat)
id<-which(trajm.dat$Main.Traj..Y.N.==Y)
id<-which(trajm.dat$Main.Traj..Y.N.=="Y")
idY<-which(trajm.dat$Main.Traj..Y.N.=="Y")
mean(trajm.dat$Temperature[idY])
trajm.dat$Temperature[idY]
mean(trajm.dat$Temperature[idY])
sd(trajm.dat$Temperature[idY])
sd(trajm.dat$Temperature)
mean(trajm.dat$Temperature)
sd(trajm.dat$Precipitation)
mean(trajm.dat$Precipitation)
range(trajm.dat$Precipitation)
range(trajm.dat$Temperature)
mean(trajm.dat$Size[idY])
sd(trajm.dat$Size[idY])
idN<-which(trajm.dat$Main.Traj..Y.N.=="N")
sd(trajm.dat$Size[idN])
mean(trajm.dat$Size[idN])
mean(trajm.dat$Distance.to.coast)
sd(trajm.dat$Distance.to.coast)
range(trajm.dat$Distance.to.coast)
mean(trajm.dat$Forest..1....non.forest..2.)
sd(trajm.dat$Forest..1....non.forest..2.)
range(trajm.dat$Forest..1....non.forest..2.)
mean(trajm.dat$Distance.rivers)
sd(trajm.dat$Distance.rivers)
range(trajm.dat$Distance.rivers)
mean(trajm.dat$Ruggedness)
sd(trajm.dat$Ruggedness)
range(trajm.dat$Ruggedness)
library(maps)
library(ade4)
trajm.dat <- read.csv("AveragedHumanTrajectories(VegLow)_stats.csv",sep=",",dec=".",header=T)
norme.fct <- function(trajm.dat,v0)
## je rajoute trajm.dat dans les arguments
{
v <- NULL
for(i in unique(trajm.dat[,2]))
{
sel<- trajm.dat[,2]==i
v1 <- v0[sel]
####     v <- norme.fct(trajm.dat[,15]*trajm.dat[,4]) rien ? foutre l? : ttention aux coupes colles
v1<- (v1-mean(v1))/sd(v1)
v <- c(v,v1)
}
return(v)
}
test.fct <- function(v1,v2)
{
stat.fct <-function(v1,v2)
{ return(mean(v1)-mean(v2))}
obs <- stat.fct(v1,v2)
sim <- NULL
for(i in 1:10000)
{
w <- sample(c(v1,v2))
sim <- c(sim,stat.fct(w[1:length(v1)],w[(length(v1)+1):length(w)]))
}
return(sum(sim>obs)/length(sim))
}
for(i in 7:15)
{
v <- norme.fct(trajm.dat,trajm.dat[,i]*trajm.dat[,4])
res <- test.fct(v[trajm.dat[,1]!="Y"],v[trajm.dat[,1]=="Y"])
print(c(names(trajm.dat)[i],"p-valeur de la diff de moyenne",res))
}
View(trajm.dat)
for(i in 8:13)
{
v <- norme.fct(trajm.dat,trajm.dat[,i]*trajm.dat[,4])
res <- test.fct(v[trajm.dat[,1]!="Y"],v[trajm.dat[,1]=="Y"])
print(c(names(trajm.dat)[i],"p-valeur de la diff de moyenne",res))
}
for(i in 8:13)
{
v <- norme.fct(trajm.dat,trajm.dat[,i]*trajm.dat[,4])
res <- test.fct(v[trajm.dat[,1]!="Y"],v[trajm.dat[,1]=="Y"])
print(c(names(trajm.dat)[i],"p-valeur de la diff de moyenne",1-res))
}
for(i in 8:13)
{
v <- norme.fct(trajm.dat,trajm.dat[,i]*trajm.dat[,4])
res <- test.fct(v[trajm.dat[,1]!="Y"],v[trajm.dat[,1]=="Y"])
print(c(names(trajm.dat)[i],"p-valeur de la diff de moyenne",abs(res-0.5)))
}
library(maps)
library(ade4)
trajm.dat <- read.csv("AveragedHumanTrajectories(Veghigh)_stats.csv",sep=",",dec=".",header=T)
norme.fct <- function(trajm.dat,v0)
## je rajoute trajm.dat dans les arguments
{
v <- NULL
for(i in unique(trajm.dat[,2]))
{
sel<- trajm.dat[,2]==i
v1 <- v0[sel]
####     v <- norme.fct(trajm.dat[,15]*trajm.dat[,4]) rien ? foutre l? : ttention aux coupes colles
v1<- (v1-mean(v1))/sd(v1)
v <- c(v,v1)
}
return(v)
}
## test par permutation de l'egalite des moyennes des variables v1 et v2
##
test.fct <- function(v1,v2)
{
stat.fct <-function(v1,v2)
{ return(mean(v1)-mean(v2))}
obs <- stat.fct(v1,v2)
sim <- NULL
for(i in 1:10000)
{
w <- sample(c(v1,v2))
sim <- c(sim,stat.fct(w[1:length(v1)],w[(length(v1)+1):length(w)]))
}
return(sum(sim>obs)/length(sim))
}
### inutile... (normalisation de la projection sur laxe 2 de l'acp de la variable Taille
#v <- norme.fct(trajm.dat,jj$li[,2]*trajm.dat[,4])
### normalisation de la variable Temp(erature) par groupe de trajectoire
#v <- norme.fct(trajm.dat,trajm.dat[,7])
#plot(v,trajm.dat[,1],col=match(trajm.dat[,2],unique(trajm.dat[,2])),pch=19,xlab="Temp normee par groupe",ylab="State")
## est-ce que la valeur de la variable Temp(erature) normalisee par groupe de trajectoire
## varie selon que State vaut Y ou non ?
#test.res <- test.fct(v[trajm.dat[,1]!="Y"],v[trajm.dat[,1]=="Y"])
### les variables en boucle
## et on refait pour toutes les variables d'environnement
for(i in 8:13)
{
v <- norme.fct(trajm.dat,trajm.dat[,i]*trajm.dat[,4])
res <- test.fct(v[trajm.dat[,1]!="Y"],v[trajm.dat[,1]=="Y"])
print(c(names(trajm.dat)[i],"p-valeur de la diff de moyenne",abs(res-0.5)))
}
out<-as.data.frame(NaN)
View(out)
out<-as.data.frame()
out<- data.frame(matrix(ncol = 2, nrow = 0))
colnames(df) <- c('Variable', 'Probablilty')
for(i in 8:13)
{
v <- norme.fct(trajm.dat,trajm.dat[,i]*trajm.dat[,4])
res <- test.fct(v[trajm.dat[,1]!="Y"],v[trajm.dat[,1]=="Y"])
out<-rbind(out,c(names(trajm.dat)[i],abs(res-0.5)))
print(c(names(trajm.dat)[i],"p-valeur de la diff de moyenne",abs(res-0.5)))
}
View(out)
out<- data.frame(matrix(ncol = 2, nrow = 0))
colnames(out <- c('Variable', 'Probablilty')
for(i in 8:13)
{
v <- norme.fct(trajm.dat,trajm.dat[,i]*trajm.dat[,4])
res <- test.fct(v[trajm.dat[,1]!="Y"],v[trajm.dat[,1]=="Y"])
out<-rbind(out,c(names(trajm.dat)[i],abs(res-0.5)))
print(c(names(trajm.dat)[i],"p-valeur de la diff de moyenne",abs(res-0.5)))
}
out<- data.frame(matrix(ncol = 2, nrow = 0))
colnames(out) <- c('Variable', 'Probablilty')
for (i in 8:13)
{
v <- norme.fct(trajm.dat,trajm.dat[,i]*trajm.dat[,4])
res <- test.fct(v[trajm.dat[,1]!="Y"],v[trajm.dat[,1]=="Y"])
out<-rbind(out,c(names(trajm.dat)[i],abs(res-0.5)))
print(c(names(trajm.dat)[i],"p-valeur de la diff de moyenne",abs(res-0.5)))
}
View(out)
colnames(out) <- c('Variable', 'Probablilty')
View(out)
out2<-(out$Probablilty - min(out$Probablilty)) / (max(out$Probablilty) - min(out$Probablilty))
out$Probablilty - min(out$Probablilty)
out$Probablilty - min(out$Probablilty
)
out$Probablilty<-as.numeric(out$Probablilty)
out2<-(out$Probablilty - min(out$Probablilty)) / (max(out$Probablilty) - min(out$Probablilty))
out2
out$scaleprob<--(out$Probablilty - min(out$Probablilty)) / (max(out$Probablilty) - min(out$Probablilty))
out$scaleprob<-(out$Probablilty - min(out$Probablilty)) / (max(out$Probablilty) - min(out$Probablilty))
colnames(out) <- c('Variable', 'Probablilty', 'Scaled Probablilty')
